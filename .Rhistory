library(readr)
resume_data <- read_csv("data/resume_data.csv")
View(resume_data)
################################################################################
# Loading libraries
################################################################################
library(ggplot2)
library(tidyverse)
current_dir <- getwd()
resume_df <- file.path(current_dir, 'data/resume_data.csv')
resume_file <- file.path(current_dir, 'data/resume_data.csv')
resume_df <- read_csv(resume_file)
View(resume_df)
# Dropping unwanted columns (address)
View(resume_df)
summary(resume_df)
colnames(resume_df)
resume_df <- resume_df %>% select(-address, -passing_years, -educational_results,
-result_types, -company_urls, -start_dates, -end_dates,
-locations, -extra_curricular_activity_types, -extra_curricular_organization_names,
-extra_curricular_organization_links)
View(resume_df)
resume_df <- resume_df %>% select(-address, -passing_years, -educational_results,
-result_types, -company_urls, -start_dates, -end_dates,
-locations, -extra_curricular_activity_types, -extra_curricular_organization_names,
-extra_curricular_organization_links, -role_positions, -certification_providers, -certification_skills,
-online_links, -issue_dates, -expiry_dates, -age_requirement)
library(tidyverse)
library(tidyverse)
source("C:/Users/Ethan/OneDrive/Cloud_Desktop/00_UC/00_2025_S1/02_DATA/side_project/workbench.R", echo=TRUE)
# output: ....
colnames(resume_df)
spoken_lng_df <- resume_df %>% select(languages, proficiency_levels)
clean_spoken_lng_df <- na.omit(spoken_lng_df)
View(clean_spoken_lng_df)
str(resume_df)
summary(resume_df)
resume_df[] <- lapply(resume_df, function(x) {
x <- gsub("\\[\\]", "", x)
x <- gsub("'", "", x)
return(x)
})
View(resume_df)
summary(resume_df)
resume_df[] <- lapply(resume_df, function(x) {
x <- gsub("\\[\\]", "", x)
x <- gsub("^\\[|\\]$", "", x)
x <- gsub("'", "", x)
return(x)
})
View(resume_df)
source("C:/Users/Ethan/OneDrive/Cloud_Desktop/00_UC/00_2025_S1/02_DATA/side_project/workbench.R", echo=TRUE)
View(resume_df)
library(dplyr)
resume_df %>% count(positions)
# Create a table of counts
count_table <- data.frame(Unique_Entry = names(table(resume_df$positions)),
Count = as.integer(table(resume_df$poistions)))
# Create a table of counts
count_table <- data.frame(Unique_Entry = names(table(resume_df$positions)),
Count = as.integer(table(resume_df$positions)))
# View the table
print(count_table)
View(count_table)
count_table <- count_table[order(-count_table$Count), ]
# View the table
View(count_table)
install.packages("topicmodels")
install.packages("tm")
library(topicmodels)
library(tm)
# Convert text to a Document-Term Matrix (DTM)
docs <- Corpus(VectorSource(resume_df$responsibilities.1))
dtm <- DocumentTermMatrix(docs)
# Apply LDA with 3 topics
lda_model <- LDA(dtm, k = 3, control = list(seed = 1234))
# View topics
topics <- terms(lda_model, 5)  # Get top 5 words for each topic
print(topics)
View(dtm)
View(dtm)
View(docs)
View(docs)
View(topics)
# Convert text to a Document-Term Matrix (DTM)
docs <- Corpus(VectorSource(resume_df$skills))
dtm <- DocumentTermMatrix(docs)
# Apply LDA with 3 topics
lda_model <- LDA(dtm, k = 3, control = list(seed = 1234))
# View topics
skill_overview <- terms(lda_model, 5)  # Get top 5 words for each topic
print(skill_overview)
View(skill_overview)
# Convert text to a Document-Term Matrix (DTM)
skill_docs <- Corpus(VectorSource(resume_df$skills))
skill_dtm <- DocumentTermMatrix(docs)
# Apply LDA with 3 topics
skill_lda_model <- LDA(skill_dtm, k = 3, control = list(seed = 1234))
print(skill_overview)
source("C:/Users/Ethan/OneDrive/Cloud_Desktop/00_UC/00_2025_S1/02_DATA/side_project/03_modeling.R", echo=TRUE)
source("C:/Users/Ethan/OneDrive/Cloud_Desktop/00_UC/00_2025_S1/02_DATA/side_project/03_modeling.R", echo=TRUE)
warnings()
knitr::opts_chunk$set(echo = TRUE)
source("03_modeling.R")
lda_skills %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_responsibilites %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_field_studied %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_career %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
# Select unique company names and counts
unique_data <- resume_df %>%
distinct(professional_company_names, company_count) %>%
drop_na()
top_10_data <- unique_data %>%
slice_max(order_by = company_count, n = 10)
View(top_10_data)
#thing <- head(top_10_data, 15)
# Select top 10 rows with highest company_count
#thing <- head(top_10_data, 5)
# just remove first row for now and look for logical condition later
# Create a kable table for the top 10 companies
#thing %>%
# kable(format = "html", col.names = c("Company Name", "Company Count")) %>%
#  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
thing <- head(top_10_data, 5)
# Create a kable table for the top 10 companies
thing %>%
kable(format = "html", col.names = c("Company Name", "Company Count")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
thing <- thing[-1, ]
# Create a kable table for the top 10 companies
thing %>%
kable(format = "html", col.names = c("Company Name", "Company Count")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Select unique company names and counts
unique_data <- resume_df %>%
distinct(professional_company_names, company_count) %>%
drop_na()
top_10_data <- unique_data %>%
slice_max(order_by = company_count, n = 10)
thing <- thing[-1, ]
thing <- head(top_10_data, 15)
thing <- head(top_10_data, 5)
# Create a kable table for the top 10 companies
thing %>%
kable(format = "html", col.names = c("Company Name", "Company Count")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
knitr::opts_chunk$set(echo = TRUE)
source("03_modeling.R")
lda_skills %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_responsibilites %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_field_studied %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_career %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
# Select unique company names and counts
unique_data <- resume_df %>%
distinct(professional_company_names, company_count) %>%
drop_na()
top_10_data <- unique_data %>%
slice_max(order_by = company_count, n = 10)
thing <- head(top_10_data, 15)
thing <- thing[-1, ]
# Select top 10 rows with highest company_count
thing <- head(top_10_data, 5)
# just remove first row for now and look for logical condition later
# Create a kable table for the top 10 companies
thing %>%
kable(format = "html", col.names = c("Company Name", "Company Count")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
knitr::opts_chunk$set(echo = TRUE)
source("03_modeling.R")
lda_skills %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_responsibilites %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_field_studied %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_career %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
# Select unique company names and counts
unique_data <- resume_df %>%
distinct(professional_company_names, company_count) %>%
drop_na()
top_10_data <- unique_data %>%
slice_max(order_by = company_count, n = 10)
thing <- head(top_10_data, 15)
# Select top 10 rows with highest company_count
thing <- head(top_10_data, 6)
thing <- thing[-1, ]
# just remove first row for now and look for logical condition later
# Create a kable table for the top 10 companies
thing %>%
kable(format = "html", col.names = c("Company Name", "Company Count")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
View(resume_df)
colnames(resume_df)
lda_skills_required <- perform_lda((resume_df, "skills_required"))
lda_skills_required <- perform_lda(resume_df, "skills_required")
lda_skills_required %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
source("03_modeling.R")
lda_skills %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_responsibilites %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_field_studied %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_career %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_skills_required %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
# Select unique company names and counts
unique_data <- resume_df %>%
distinct(professional_company_names, company_count) %>%
drop_na()
top_10_data <- unique_data %>%
slice_max(order_by = company_count, n = 10)
thing <- head(top_10_data, 15)
# Select top 10 rows with highest company_count
thing <- head(top_10_data, 6)
thing <- thing[-1, ]
# just remove first row for now and look for logical condition later
# Create a kable table for the top 10 companies
thing %>%
kable(format = "html", col.names = c("Company Name", "Company Count")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
View(resume_df)
lda_skills_required <- perform_lda(resume_df, "skills_required", num_topics = 3, num_words = 10)
lda_skills_required %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_skills_required <- perform_lda(resume_df, "skills_required", num_topics = 2, num_words = 10)
lda_skills_required %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_skills_required <- perform_lda(resume_df, "skills_required", num_topics = 4, num_words = 10)
lda_skills_required %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_skills_required <- perform_lda(resume_df, "skills_required", num_topics = 2, num_words = 10)
lda_skills_required %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
resume_df <- clean_column(resume_df, "skills_required", word_removal)
knitr::opts_chunk$set(echo = TRUE)
source("03_modeling.R")
lda_skills %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_responsibilites %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_field_studied %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_career %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
lda_skills_required %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
# Select unique company names and counts
unique_data <- resume_df %>%
distinct(professional_company_names, company_count) %>%
drop_na()
top_10_data <- unique_data %>%
slice_max(order_by = company_count, n = 10)
thing <- head(top_10_data, 15)
# Select top 10 rows with highest company_count
thing <- head(top_10_data, 6)
thing <- thing[-1, ]
# just remove first row for now and look for logical condition later
# Create a kable table for the top 10 companies
thing %>%
kable(format = "html", col.names = c("Company Name", "Company Count")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Removes selected words from the column ""
word_removal <- c("skills", "skill")
resume_df <- clean_column(resume_df, "skills_required", word_removal)
lda_skills_required <- perform_lda(resume_df, "skills_required", num_topics = 2, num_words = 10)
lda_skills_required %>%
group_by(topic) %>%
top_n(10, beta) %>%
ggplot(aes(x = reorder(term, beta), y = beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
